{
    #[function_component(CardExpandableWithIcon)]
    fn actions() -> Html {
        let checked = use_state(|| CheckboxState::Unchecked);

        let onclick = use_callback(checked.clone(), |new_val, checked| checked.set(new_val));
        let actions = html! {
            <>
                <Dropdown variant={MenuToggleVariant::Plain} icon={Icon::EllipsisV}>
                    <MenuAction>{"Action"}</MenuAction>
                    <MenuLink href={"#"}>{"Link"}</MenuLink>
                    <MenuAction disabled=true>{"Disabled Action"}</MenuAction>
                    <MenuLink href={"#"} disabled=true>{"Disabled Link"}</MenuLink>
                    <ListDivider/>
                    <MenuAction>{"Separated Action"}</MenuAction>
                    <MenuLink href={"#"}>{"Separated Link"}</MenuLink>
                </Dropdown>
                <Checkbox checked={*checked} onchange={onclick.clone()} id="check-5" name="check-5"/>
            </>
        };
        let actions = yew::props!(CardHeaderActionsObject { actions });

        let expanded = use_state(|| false);
        let onexpand = use_callback(expanded.clone(), |_, expanded| expanded.set(!(**expanded)));
        html! {
            <Card expanded={*expanded}>
                <CardHeader {actions} {onexpand}>
                    <img src="/assets/images/pf-c-brand__logo-on-sm.svg" alt="pf-logo-small" width="27px"/>
                </CardHeader>
                <CardExpandableContent>
                    <CardBody>{"Body"}</CardBody>
                    <CardFooter>{"Footer"}</CardFooter>
                </CardExpandableContent>
            </Card>
        }
    }
    html! {
        <CardExpandableWithIcon/>
    }
}
