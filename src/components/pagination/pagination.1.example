{

#[function_component(Example)]
fn example() -> Html {

    const TOTAL_ENTRIES: usize = 1_000;

    let offset = use_state_eq(||0);
    let limit = use_state_eq(||5);

    let entries = use_memo(|(offset, limit)| {
        (*offset..offset + limit).into_iter().map(ExampleEntry).collect::<Vec<_>>()
    }, (*offset, *limit));

    let (entries, _) = use_table_data(MemoizedTableModel::new(entries));

    let header = html_nested! {
        <TableHeader<Columns>>
            <TableColumn<Columns> label="#" index={Columns::ItemNumber} />
            <TableColumn<Columns> label="Decimal" index={Columns::Decimal} />
            <TableColumn<Columns> label="Hex" index={Columns::Hex} />
        </TableHeader<Columns>>
    };

    let total_entries = Some(TOTAL_ENTRIES);

    let limit_callback ={
        let limit = limit.clone();
        Callback::from(move |number| {
            limit.set(number)
        })
    };

    let nav_callback = {
        let offset = offset.clone();
        let limit = *limit;
        Callback::from(move |page: Navigation| {
            let o = match page {
                Navigation::First => 0,
                Navigation::Last => TOTAL_ENTRIES - limit,
                Navigation::Previous => *offset - limit,
                Navigation::Next => *offset + limit,
                Navigation::Page(n) => (n-1) * limit,
            };
            offset.set(o);
        })
    };

    html! (
        <>
            <Toolbar>
                <ToolbarContent>
                    <ToolbarItem r#type={ToolbarItemType::Pagination}>
                        <Pagination
                            style="--pf-v5-c-pagination__nav-page-select--c-form-control--width-chars: 5;"
                            {total_entries}
                            offset={*offset}
                            entries_per_page_choices={vec![5, 10, 25, 50, 100]}
                            selected_choice={*limit}
                            onlimit={limit_callback}
                            onnavigation={nav_callback}
                        />
                    </ToolbarItem>
                </ToolbarContent>
            </Toolbar>
            <Table<Columns, UseTableData<Columns, MemoizedTableModel<ExampleEntry>>>
                mode={TableMode::Compact}
                {header}
                {entries}
            />
        </>
    )
}

html!(<Example/>)
}
